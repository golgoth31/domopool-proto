syntax = "proto3";

package domopool;

option go_package = "github.com/golgoth31/domopool-proto;domopool_proto";

message NTP {
  uint32 day_light = 1; // 3600 if daylight is observed or 0 if not
  string server = 2;
  uint32 timezone = 3; // UTC offset in s: UTC+1=3600
}

message Mqtt {
  bool enabled = 1;
  string server = 2;
}

message Network {
  bool dhcp = 1;
  string ip = 2;
  string netmask = 3;
  string gateway = 4;
  string dns = 5;
  bool allow_post = 6;
  Mqtt mqtt = 7;
  NTP ntp = 8;
}

message Temp {
  bool enabled = 1;
  bool init = 2;
  string addr = 3;
  // repeated uint32 addr = 8;
}

message Limits {
  float wp_min = 1;
  float wp_max = 2;
  float ph_min = 3;
  float ph_max = 4;
  float ch_min = 5;
  float ch_max = 6;
  // number of hour to wait when temp is above 15 to activate ch
  uint32 ch_wait_before_allow = 7;
  uint32 ch_wait_before_deny = 8;
  // temp threshold to activate ch
  float ch_temp_threshold_high = 9;
  float ch_temp_threshold_low = 10;
  float wp_0_derive = 11;
  float tw_min = 12;
  float tw_max = 13;
  float tamb_min = 14;
}

message AnalogSensor {
  bool enabled = 1;
  uint32 adc_pin = 3;
  float threshold = 2;
  uint32 threshold_accuracy = 4;
  float vmin = 5;
  float vmax = 6;
  uint32 precision_factor = 7;
  bool auto_cal = 8;
}

message Sensors {
  Temp twin = 1;
  Temp twout = 2;
  Temp tamb = 3;
  bool wait_for_conversion = 4;
  uint32 temp_resolution = 5;
  uint32 precision_factor = 6;
  AnalogSensor ph = 7;
  AnalogSensor ch = 8;
  AnalogSensor wp = 9;
  uint32 adc_mode = 10;
  uint32 adc_datarate = 11;
  uint32 adc_gain = 12;
}

message Global {
  uint32 lcd_backlight_duration = 1;
  uint32 ack_duration = 2;
  double ack_tone = 3;
  bool serial_out = 4;
  bool display_startup = 5;
  bool force_light = 6;
  uint32 wdt_duration = 7;
}

enum Pump_timing {
  nothing = 0;
  dynamic = 1;
  half_day = 2;
  full_day = 3;
}

message Pump {
  bool force_filter = 1;
  bool force_ph = 2;
  bool force_ch = 3;
  bool automatic = 4;
  bool recover = 5;
  bool force_check = 6;
  uint32 force_duration = 7;
  uint32 force_start_time = 8;
  Pump_timing timing = 9;
}

message Ads115Alarms {
  bool not_ready = 1;
  bool not_started = 2;
  bool not_connected = 3;
}

message MqttAlarms {
  bool metrics = 1;
  bool states = 2;
  bool alarms = 3;
  bool temps = 4;
}

message Alarms {
  bool filter = 1;
  bool ph = 2;
  bool ch = 3;
  bool rtc = 5;
  bool wp_high = 6;
  bool wp_low = 7;
  bool wp_broken = 8;
  Ads115Alarms ads1115 = 9;
  bool tw_frost = 10;
  bool tw_high = 11;
  bool tamb_frost = 12;
  MqttAlarms mqtt = 13;
  bool reboot = 14;
}

message Tests {
  bool enabled = 1;
  float twater = 2;
  float tamb = 3;
  float ph = 4;
  float pressure = 5;
}

message Metrics {
  float tamb = 1;
  float twater = 2;
  float saved_twater = 3;
  float ph = 4;
  float ch = 5;
  float wp = 6;
  float wp_volt = 7;
  uint32 over_ch_t_high_duration = 8;
  uint32 under_ch_t_low_duration = 9;
  uint32 hour = 10;
  // uint32 time = 10;
  string time = 11;
}

message States {
  bool startup = 1;
  bool filter_on = 2;
  bool ph_on = 3;
  bool ch_on = 4;
  bool automatic = 5;
  bool net_active = 6;
  bool ntp = 7;
  bool rtc = 8;
  bool light_on = 9;
  bool mqtt_connected = 10;
  bool recover = 11;
  bool dynamic = 12;
  bool half_day = 13;
  bool full_day = 14;
}

message Versions {
  string domopool = 1;
  uint32 platformio = 2;
  string esp_idf = 3;
  string xtensa = 4;
  string tft_espi = 6;
  string dallastemp = 7;
  string ads1115 = 8;
  string nanopb = 9;
  string mqtt = 10;
  string arduinojson = 11;
}

message Infos {
  string compile = 1;
  string board_name = 2;
  Versions versions = 3;
}

message Config {
  Network network = 1;
  Sensors sensors = 2;
  Global global = 3;
  Pump pump = 5;
  Metrics metrics = 6;
  States states = 7;
  Alarms alarms = 8;
  Tests tests = 9;
  Infos infos = 10;
  Limits limits = 11;
}

enum Relay_states {
  auto = 0;
  start = 1;
  stop = 2;
}

enum Relay_names {
  filter = 0;
  ch = 1;
  ph = 2;
  all = 3;
  light = 4;
}

message Relay {
  Relay_states state = 1;
  Relay_names relay = 2;
  uint32 duration = 3;
  uint32 start_time = 4;
}
